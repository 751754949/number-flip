{"version":3,"file":"number-flip.min.js","sources":["../number-flip.js"],"sourcesContent":["const { g } = require('gelerator')\n\nconst maxLenNum = (aNum, bNum) => (aNum > bNum ? aNum : bNum).toString().length\n\nconst num2PadNumArr = (num, len) => {\n  const padLeftStr = (rawStr, lenNum) => (rawStr.length < lenNum\n    ? padLeftStr('0' + rawStr, lenNum)\n    : rawStr)\n  const str2NumArr = rawStr => rawStr.split('').map(Number)\n  return str2NumArr(padLeftStr(num.toString(), len)).reverse()\n}\n\nexport class Flip {\n  constructor({\n    node,\n    from = 0,\n    to,\n    duration = .5,\n    delay,\n    easeFn = (pos => (pos /= .5) < 1\n                ? .5 * Math.pow(pos, 3)\n                : .5 * (Math.pow((pos - 2), 3) + 2)),\n    systemArr = [...Array(10).keys()],\n    direct = true\n  }) {\n    this.beforeArr = []\n    this.afterArr = []\n    this.ctnrArr = []\n    this.duration = duration * 1000\n    this.systemArr = systemArr\n    this.easeFn = easeFn\n    this.from = from\n    this.to = to || 0\n    this.node = node\n    this.direct = direct\n    this._initHTML(maxLenNum(this.from, this.to))\n    if (to === undefined) return\n    if (delay) setTimeout(() => this.flipTo({to: this.to, direct}), delay * 1000)\n    else this.flipTo({to: this.to, direct})\n  }\n\n  _initHTML(digits) {\n    this.node.classList.add('number-flip')\n    this.node.style.position = 'relative'\n    this.node.style.overflow = 'hidden'\n    ;[...Array(digits).keys()].forEach(i => {\n      const ctnr = g(`ctnr ctnr${i}`)(\n        ...this.systemArr.map(i => g('digit')(i)),\n        g('digit')(this.systemArr[0])\n      )\n      ctnr.style.position = 'relative'\n      ctnr.style.display = 'inline-block'\n      this.ctnrArr.unshift(ctnr)\n      this.node.appendChild(ctnr)\n      this.beforeArr.push(0)\n    })\n    this.height = this.ctnrArr[0].clientHeight / (this.systemArr.length + 1)\n    this.node.style.height = this.height + 'px'\n    for (let d = 0, len = this.ctnrArr.length; d < len; d += 1)\n      this._draw({\n        digit: d,\n        per: 1,\n        alter: ~~(this.from / Math.pow(10, d))\n      })\n  }\n\n  _draw({per, alter, digit}) {\n    const from = this.beforeArr[digit]\n    const modNum = ((per * alter + from) % 10 + 10) % 10\n    const translateY = `translateY(${- modNum * this.height}px)`\n    this.ctnrArr[digit].style.webkitTransform = translateY\n    this.ctnrArr[digit].style.transform = translateY\n  }\n\n  flipTo({\n    to,\n    duration,\n    easeFn,\n    direct = true\n  }) {\n    const len = this.ctnrArr.length\n    this.beforeArr = num2PadNumArr(this.from, len)\n    this.afterArr = num2PadNumArr(to, len)\n    const draw = per => {\n      let temp = 0\n      for (let d = this.ctnrArr.length - 1; d >= 0; d -= 1) {\n        let alter = this.afterArr[d] - this.beforeArr[d]\n        temp += alter\n        const fn = easeFn || this.easeFn\n        this._draw({\n          digit: d,\n          per: fn(per),\n          alter: direct ? alter : temp\n        })\n        temp *= 10\n      }\n    }\n    const start = performance.now()\n    const dur = (duration * 1000) || this.duration\n    const tick = now => {\n      let elapsed = now - start\n      draw(elapsed / dur)\n      if (elapsed < dur) requestAnimationFrame(tick)\n      else {\n        this.from = to\n        draw(1)\n      }\n    }\n    requestAnimationFrame(tick)\n  }\n}"],"names":["g","require","maxLenNum","aNum","bNum","toString","length","num2PadNumArr","num","len","padLeftStr","rawStr","lenNum","split","map","Number","reverse","Flip","node","from","to","duration","delay","easeFn","pos","Math","pow","systemArr","Array","keys","direct","beforeArr","afterArr","ctnrArr","_initHTML","this","undefined","setTimeout","_this","flipTo","digits","classList","add","style","position","overflow","forEach","ctnr","i","_this2","display","unshift","appendChild","push","height","clientHeight","d","_draw","per","alter","digit","translateY","webkitTransform","transform","draw","temp","_this3","fn","start","performance","now","dur","tick","elapsed","requestAnimationFrame"],"mappings":"4rBAAQA,EAAMC,QAAQ,aAAdD,EAEFE,EAAY,SAACC,EAAMC,UAAUD,EAAOC,EAAOD,EAAOC,GAAMC,WAAWC,QAEnEC,EAAgB,SAACC,EAAKC,kBACP,SAAbC,EAAcC,EAAQC,UAAYD,EAAOL,OAASM,EACpDF,EAAW,IAAMC,EAAQC,GACzBD,EAEcD,CAAWF,EAAIH,WAAYI,GADhBE,EAAOE,MAAM,IAAIC,IAAIC,SACCC,WAGxCC,EAAb,oCAEIC,IAAAA,SACAC,KAAAA,aAAO,IACPC,IAAAA,OACAC,SAAAA,aAAW,KACXC,IAAAA,UACAC,OAAAA,aAAU,mBAAQC,GAAO,IAAM,EACjB,GAAKC,KAAKC,IAAIF,EAAK,GACnB,IAAMC,KAAKC,IAAKF,EAAM,EAAI,GAAK,UAC7CG,UAAAA,eAAgBC,MAAM,IAAIC,cAC1BC,OAAAA,2HAEKC,kBACAC,iBACAC,gBACAZ,SAAsB,IAAXA,OACXM,UAAYA,OACZJ,OAASA,OACTJ,KAAOA,OACPC,GAAKA,GAAM,OACXF,KAAOA,OACPY,OAASA,OACTI,UAAUhC,EAAUiC,KAAKhB,KAAMgB,KAAKf,UAC9BgB,IAAPhB,IACAE,EAAOe,WAAW,kBAAMC,EAAKC,WAAYD,EAAKlB,eAAsB,IAARE,GAC3Da,KAAKI,WAAYJ,KAAKf,wEAGnBoB,mBACHtB,KAAKuB,UAAUC,IAAI,oBACnBxB,KAAKyB,MAAMC,SAAW,gBACtB1B,KAAKyB,MAAME,SAAW,WACtBjB,MAAMY,GAAQX,QAAQiB,QAAQ,gBAC3BC,EAAO/C,qBAAcgD,mBACtBC,EAAKtB,UAAUb,IAAI,mBAAKd,EAAE,QAAFA,CAAWgD,cACtChD,EAAE,QAAFA,CAAWiD,EAAKtB,UAAU,SAEvBgB,MAAMC,SAAW,aACjBD,MAAMO,QAAU,iBAChBjB,QAAQkB,QAAQJ,KAChB7B,KAAKkC,YAAYL,KACjBhB,UAAUsB,KAAK,UAEjBC,OAASnB,KAAKF,QAAQ,GAAGsB,cAAgBpB,KAAKR,UAAUrB,OAAS,QACjEY,KAAKyB,MAAMW,OAASnB,KAAKmB,OAAS,SAClC,IAAIE,EAAI,EAAG/C,EAAM0B,KAAKF,QAAQ3B,OAAQkD,EAAI/C,EAAK+C,GAAK,OAClDC,aACID,MACF,WACKrB,KAAKhB,KAAOM,KAAKC,IAAI,GAAI8B,2CAIlCE,IAAAA,IAAKC,IAAAA,MAAOC,IAAAA,MACXzC,EAAOgB,KAAKJ,UAAU6B,GAEtBC,2BADWH,EAAMC,EAAQxC,GAAQ,GAAK,IAAM,IACNgB,KAAKmB,mBAC5CrB,QAAQ2B,GAAOjB,MAAMmB,gBAAkBD,OACvC5B,QAAQ2B,GAAOjB,MAAMoB,UAAYF,+CAItCzC,IAAAA,GACAC,IAAAA,SACAE,IAAAA,WACAO,OAAAA,gBAEMrB,EAAM0B,KAAKF,QAAQ3B,YACpByB,UAAYxB,EAAc4B,KAAKhB,KAAMV,QACrCuB,SAAWzB,EAAca,EAAIX,OAC5BuD,EAAO,oBACPC,EAAO,EACFT,EAAIU,EAAKjC,QAAQ3B,OAAS,EAAGkD,GAAK,EAAGA,GAAK,EAAG,KAChDG,EAAQO,EAAKlC,SAASwB,GAAKU,EAAKnC,UAAUyB,MACtCG,MACFQ,EAAK5C,GAAU2C,EAAK3C,SACrBkC,aACID,MACFW,EAAGT,SACD5B,EAAS6B,EAAQM,OAElB,KAGNG,EAAQC,YAAYC,MACpBC,EAAkB,IAAXlD,GAAoBc,KAAKd,+BACzB,SAAPmD,SACAC,EAAUH,EAAMF,IACfK,EAAUF,GACXE,EAAUF,EAAKG,sBAAsBF,MAElCrD,KAAOC,IACP,wCA7Fb"}